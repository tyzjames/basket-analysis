USE SCHEMAXXX

-- SELECT ITEM TO ANALYSE
DECLARE @ITEM AS INT
SET @ITEM = 2184

IF OBJECT_ID('TEMPDB..#TEMP_1') IS NOT NULL
		DROP TABLE #TEMP_1
	CREATE TABLE #TEMP_1 (TXN_ID DECIMAL (23,15), ITEM_ID BIGINT, ROW_ID BIGINT)
	INSERT INTO #TEMP_1
	SELECT DISTINCT CAST(TXN_ID AS DECIMAL(23,15)), CASE WHEN ITEM_ID = @ITEM THEN -9999999999 ELSE ITEM_ID END ITEM_ID
		, ROW_NUMBER() OVER (PARTITION BY CAST(TXN_ID AS DECIMAL(23,15)) ORDER BY CASE WHEN ITEM_ID = @ITEM THEN -9999999999 ELSE ITEM_ID END) ROW_ID FROM dbo.BA_Transactions
		WHERE TXN_ID IN (SELECT DISTINCT TXN_ID FROM dbo.BA_Transactions WHERE ITEM_ID IN (@ITEM))
	

	-- GET MAXIMUM NUMBER OF UNIQUE ITEM IN TRANSCTION
	DECLARE @MAX_NUM_ITEM AS INT
	SET @MAX_NUM_ITEM = (
		SELECT MAX(ROW_ID) FROM #TEMP_1
	)

	-- SCALE THE CONFIDENCE TO GET THE SUPPORT
	DECLARE @TOTAL_TXN_COUNT_ALL AS INT
	DECLARE @TOTAL_TXN_COUNT AS INT
	DECLARE @SCALE AS FLOAT
	SET @TOTAL_TXN_COUNT_ALL = (SELECT COUNT(DISTINCT TXN_ID) FROM dbo.BA_Transactions)
	SET @TOTAL_TXN_COUNT = (SELECT COUNT(DISTINCT TXN_ID) FROM #TEMP_1)
	SET @SCALE = @TOTAL_TXN_COUNT_ALL*1.0/@TOTAL_TXN_COUNT

	DECLARE @COUNTER AS INT
	DECLARE @ITEM_STATEMENT AS VARCHAR(MAX)
	DECLARE @PIVOT_STATEMENT AS VARCHAR(MAX)
	DECLARE @PIVOT_STATEMENT_2 AS VARCHAR(MAX)
	DECLARE @SQL_STATEMENT AS NVARCHAR(MAX)

	SET @ITEM_STATEMENT = ''
	SET @PIVOT_STATEMENT = ''
	SET @PIVOT_STATEMENT_2 = ''
	SET @SQL_STATEMENT = ''
	SET @COUNTER = 1

	WHILE @COUNTER <= @MAX_NUM_ITEM
	BEGIN
		SET @PIVOT_STATEMENT += '[' + CAST(@COUNTER AS VARCHAR(5)) + ']'
		IF @COUNTER > 1
		BEGIN
			SET @PIVOT_STATEMENT_2 += '[' + CAST(@COUNTER AS VARCHAR(5)) + ']'
		END

		IF @COUNTER < @MAX_NUM_ITEM
		BEGIN
			SET @ITEM_STATEMENT += '+ '','' + '
			SET @PIVOT_STATEMENT += ','
			IF @COUNTER > 1
			BEGIN
				SET @PIVOT_STATEMENT_2 += ','
			END
		END 

		SET @COUNTER += 1
				
	END

	SET @SQL_STATEMENT = 
		'
		IF OBJECT_ID(''TEMPDB..##TEMP_2'') IS NOT NULL
			DROP TABLE ##TEMP_2
		SELECT COUNT(DISTINCT TXN_ID) NUM_TXN, ' + @PIVOT_STATEMENT + ' INTO ##TEMP_2 FROM (
			SELECT TXN_ID, ' + @PIVOT_STATEMENT +  ' FROM (
				SELECT * FROM #TEMP_1
				) AS A
				PIVOT (SUM(ITEM_ID) FOR ROW_ID IN (' + @PIVOT_STATEMENT + '
		)) AS B
		) AS A
			GROUP BY ' + @PIVOT_STATEMENT +
			' ORDER BY COUNT(DISTINCT TXN_ID)'

	EXEC SP_EXECUTESQL @SQL_STATEMENT

	SET @SQL_STATEMENT = 
		'SELECT SUM(NUM_TXN)*1.0/(SELECT SUM(NUM_TXN) FROM ##TEMP_2)/' + CAST(@SCALE AS VARCHAR(30)) + ' SUPPORT
		, SUM(NUM_TXN)*1.0/(SELECT SUM(NUM_TXN) FROM ##TEMP_2) CONFIDENCE, ' + CAST(@ITEM AS VARCHAR(30)) + ' AS TARGET_ITEM, ' + @PIVOT_STATEMENT_2 + ' FROM ##TEMP_2
		GROUP BY ' + @PIVOT_STATEMENT_2 +
		'ORDER BY SUM(NUM_TXN) DESC'

	EXECUTE SP_EXECUTESQL @SQL_STATEMENT